scalar Date

type User {
  id: String!
  email: String!
  username: String!
  password: String!
  secureCode: String!
  services: [Service]
}

input CreateUserInput {
  id: String!
  username: String!
  email: String!
  password: String!
  secureCode: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

type Service {
  id: String!
  name: String!
  username: String!
  email: String!
  password: String!
  phoneNumber: String!
  twofactor: Boolean!
  creationTime: Date!
  updateTime: Date!
  user: User!
}

type AuthUser {
  jwt: String!
  user: User!
}

type Query {
  hello: String!
  getAllUsers: [User!]
  getCurrentUserInfo(email: String): User
  loginUser(loginUserInput: LoginUserInput!): AuthUser
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User
}
